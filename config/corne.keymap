/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |    T      |   |  Y  |  U   |  I  |  O  |  P  | ESC |
// | CTRL |  A  |  S  |  D  |  F  |    G      |   |  H  |  J   |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C  |  V  |    B      |   |  N  |  M   |  ,  |  .  |  /  | ALT |
//                    | GUI | LWR | HYPER/SPC |   | SHFT/ENT | RSE | BKSP |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &tp LC(LS(LALT)) SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LALT
               &kp LGUI &mo 1 &tp LC(LS(LA(LGUI))) SPACE  &tp RSHFT RET &mo 2 &kp BSPC
                        >;
                };

                layer_below {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
// |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
// | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | ALT |
//                     | GUI |     | HYPER/SPC |   | SHFT/ENT |  | BKSP |
                        bindings = <
   &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
   &trans    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5      &kp MINUS  &kp EQUAL &kp GRAVE       &kp LBKT &kp RBKT &kp PIPE
   &kp LSHFT &kp N6   &kp N7 &kp N8   &kp N9   &kp N0      &kp UNDER  &kp PLUS  &kp TILDE       &kp LBRC &kp RBRC &kp LALT
               &kp LGUI &trans &tp LC(LS(LA(LGUI))) SPACE     &tp RSHFT RET &trans &kp BSPC
                        >;
                };

                layer_above {
// -----------------------------------------------------------------------------------------
// |     |      |      |      |      |       |        |     |    |    |     |   |
// |     | F1   | F2   | F3   | F4   | F5    |        | LFT | DWN |  UP | RGT |     |     |
// |     | F6   | F7   | F8   | F9   | F10   |        | BT0  | BT1 | BT2 | BTCLR |     |     |
//                     |      |      |       |        |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans          &trans       &trans       &trans       &trans     &trans &trans
   &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5          &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT  &trans &trans
   &trans &kp F6 &kp F7 &kp F8 &kp F9 &kp F10         &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &trans &trans
                        &trans &trans &trans          &trans       &trans         &trans
                        >;
                };
        };
};